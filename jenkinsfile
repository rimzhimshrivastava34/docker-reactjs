pipeline {
    agent any

    environment {
        IMAGE_NAME = 'rimzhimshri/react-app'
        DOCKER_CREDENTIALS_ID = 'jenkins_creds'
        GIT_CREDENTIALS_ID = 'github_creds'
        TAG = "${BUILD_NUMBER}"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git credentialsId: "${GIT_CREDENTIALS_ID}", url: 'https://github.com/rimzhimshrivastava34/docker-reactjs.git', branch: 'master'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "🔧 Building Docker image: ${IMAGE_NAME}:${TAG}"
                    // Save to global env so it can be reused
                    env.DOCKER_IMAGE_TAGGED = "${IMAGE_NAME}:${TAG}"
                    docker.build(env.DOCKER_IMAGE_TAGGED)
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    echo "📦 Pushing image to Docker Hub..."
                    def dockerImage = docker.image(env.DOCKER_IMAGE_TAGGED)
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS_ID}") {
                        dockerImage.push()
                        dockerImage.push("latest")
                    }
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                script {
                    echo "🚀 Deploying with Docker Compose..."
                    sh """
                        echo "TAG=${TAG}" > .env
                        echo "🔁 Bringing down old containers (if any)..."
                        docker-compose down || true

                        echo "📈 Starting new deployment..."
                        docker-compose up -d --build
                    """
                }
            }
        }
    }

    post {
        success {
            echo "✅ Successfully deployed ${IMAGE_NAME} with tag: ${TAG}"
        }
        failure {
            echo "❌ Deployment failed. Please check the logs."
        }
    }
}
